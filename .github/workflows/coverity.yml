name: Coverity Scan

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch to run scans on'
        default: 'main'
        type: string

env:
  BUILD_TYPE: Release
  MTL_BUILD_DISABLE_PCAPNG: true
  LIBFABRIC_DIR: /tmp/libfabric
  XDP_VERSION: 5c88569dd15e55db678b897b8ea2a73aeaf956f4
  XDP_DIR: /tmp/xdp
  PREFIX_DIR: /usr/local
  DEBIAN_FRONTEND: noninteractive

permissions:
  contents: read

jobs:
  coverity:
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 90
    steps:
    - name: 'Harden Runner'
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit

    - name: 'Checkout repository'
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ inputs.branch }}

    - name: 'Install dependencies'
      run: |
        sudo apt-get update -y && \
        sudo apt-get install -y --no-install-recommends \
            git build-essential meson python3 python3-pyelftools pkg-config \
            libnuma-dev libjson-c-dev libpcap-dev libgtest-dev libsdl2-dev \
            libsdl2-ttf-dev libssl-dev ca-certificates m4 clang llvm zlib1g-dev \
            libelf-dev libcap-ng-dev libcap2-bin gcc-multilib systemtap-sdt-dev ninja-build \
            nasm dpdk-dev librdmacm-dev && \
        sudo apt-get clean && \
        sudo rm -rf /var/lib/apt/lists/*

    - name: 'Build and Install xdp and libbpf'
      run: |
        git clone --recurse-submodules https://github.com/xdp-project/xdp-tools.git "${XDP_DIR}" && \
        pushd "${XDP_DIR}" && \
        ./configure && \
        make -j$(nproc) && \
        sudo make install && \
        make -j$(nproc) -C "${XDP_DIR}/lib/libbpf/src" && \
        sudo make -C "${XDP_DIR}/lib/libbpf/src" install && popd

    - name: 'Build and Install libfabric'
      run: |
        git clone --depth 1 --branch v1.22.0 https://github.com/ofiwg/libfabric "${LIBFABRIC_DIR}" && \
        pushd "${LIBFABRIC_DIR}" && \
        ./autogen.sh && ./configure && \
        make -j$(nproc) && \
        sudo make install && popd

    - name: 'Install MTL'
      run: |
        git clone --depth 1 https://github.com/OpenVisualCloud/Media-Transport-Library.git imtl
        pushd imtl && ./build.sh && popd

    - name: 'Patch and configure MCM FFmpeg plugin'
      working-directory: ${{ github.workspace }}/ffmpeg-plugin
      run: |
          git config --global user.email "milosz.linkiewicz@intel.com"
          git config --global user.name "Milosz Linkiewicz"
          ./clone-and-patch-ffmpeg.sh

    - name: 'Run coverity'
      uses: vapier/coverity-scan-action@2068473c7bdf8c2fb984a6a40ae76ee7facd7a85 # v1.8.0
      with:
        project: 'Media-Communications-Mesh'
        email: ${{ secrets.COVERITY_SCAN_EMAIL }}
        token: ${{ secrets.COVERITY_SCAN_TOKEN }}
        build_language: 'cxx'
        build_platform: 'linux64'
        command: |
            ${{ github.workspace }}/build.sh && \
            ${{ github.workspace }}/ffmpeg-plugin/configure-ffmpeg.sh && \
            ${{ github.workspace }}/ffmpeg-plugin/build-ffmpeg.sh
    - uses: actions/upload-artifact@v4
      with:
        name: coverity-reports
        path: '${{ github.workspace }}/cov-int'
